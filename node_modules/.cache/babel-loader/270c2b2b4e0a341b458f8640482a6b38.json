{"ast":null,"code":"var _jsxFileName = \"/home/marko/Documents/var/www/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Day from './Day';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentWeatherData = () => {\n      let url = \"https://api.openweathermap.org/data/2.5/find?q=\".concat(this.state.value, \"&units=metric&lang=hr&appid=\").concat(this.state.API_key);\n      axios.get(url).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        this.setState({\n          weatherData: null\n        });\n        console.log(e);\n      });\n    };\n\n    this.getWeeklyWeatherData = () => {\n      let url = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(this.state.value, \"&units=metric&lang=hr&appid=\").concat(this.state.API_key);\n      console.log(url);\n      axios.get(url).then(res => {\n        const weeklyWeatherData = res.data;\n        this.setState({\n          weeklyWeatherData: weeklyWeatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleChange = e => {\n      // e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      weeklyWeatherData: null,\n      value: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    let dailyData;\n\n    if (this.state.weeklyWeatherData) {\n      const fiveDayData = this.state.weeklyWeatherData.list.filter(d => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1]);\n      console.log(fiveDayData);\n      dailyData = fiveDayData.map(index, data => React.createElement(Day, {\n        key: index,\n        temperature: data.main.temp,\n        humidity: data.main.humidity,\n        weatherDescription: data.weather[0].description // icon={data.weather[0].icon}\n        ,\n        iconUrl: \"http://openweathermap.org/img/w/\".concat(data.weather[0].icon, \".png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n\n    let city, temperature, humidity, clouds, iconUrl, icon;\n\n    if (this.state.weatherData) {\n      console.log(this.state.weatherData);\n      console.log(this.state.weeklyWeatherData);\n\n      if (this.state.weatherData.count > 0) {\n        city = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Grad: \", this.state.weatherData.list[0].name);\n        temperature = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Temperatura: \", this.state.weatherData.list[0].main.temp, \"\\xB0C\");\n        humidity = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Vlaznost vazduha: \", this.state.weatherData.list[0].main.humidity, \"%\");\n        clouds = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Oblaci: \", this.state.weatherData.list[0].weather[0].description);\n        iconUrl = \"http://openweathermap.org/img/w/\".concat(this.state.weatherData.list[0].weather[0].icon, \".png\");\n        icon = React.createElement(\"img\", {\n          src: iconUrl,\n          alt: 'alt text',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"grad\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getCurrentWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Get Current Weather Data\"), React.createElement(\"button\", {\n      onClick: this.getWeeklyWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Get Weekly Weather Data\"), city, temperature, humidity, clouds, icon, dailyData);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Documents/var/www/weather-app/src/App.js"],"names":["React","Component","Day","axios","App","constructor","props","getCurrentWeatherData","url","state","value","API_key","get","then","res","weatherData","data","setState","catch","e","console","log","getWeeklyWeatherData","weeklyWeatherData","handleChange","target","bind","render","dailyData","fiveDayData","list","filter","d","dt_txt","split","map","index","main","temp","humidity","weather","description","icon","city","temperature","clouds","iconUrl","count","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Day from './Day';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\t\tweatherData: null,\n\t\t\tweeklyWeatherData: null,\n\t\t\tvalue: null\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tgetCurrentWeatherData = () => {\n\t\tlet url = `https://api.openweathermap.org/data/2.5/find?q=${this.state.value}&units=metric&lang=hr&appid=${this\n\t\t\t.state.API_key}`;\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n\t\t\t\tthis.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tthis.setState({ weatherData: null });\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tgetWeeklyWeatherData = () => {\n\t\tlet url = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state\n\t\t\t.value}&units=metric&lang=hr&appid=${this.state.API_key}`;\n\t\tconsole.log(url);\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((res) => {\n\t\t\t\tconst weeklyWeatherData = res.data;\n\t\t\t\tthis.setState({ weeklyWeatherData: weeklyWeatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\t// e.preventDefault();\n\t\tthis.setState({ value: e.target.value });\n\t};\n\n\trender() {\n\t\tlet dailyData;\n\t\tif (this.state.weeklyWeatherData) {\n\t\t\tconst fiveDayData = this.state.weeklyWeatherData.list.filter(d => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1])\n\t\t\tconsole.log(fiveDayData);\n\t\t\tdailyData = fiveDayData.map(index, data =>(\n\t\t\t\t<Day \n\t\t\t\t\tkey={index}\n\t\t\t\t\ttemperature={data.main.temp}\n\t\t\t\t\thumidity={data.main.humidity}\n\t\t\t\t\tweatherDescription={data.weather[0].description}\n\t\t\t\t\t// icon={data.weather[0].icon}\n\t\t\t\t\ticonUrl = {`http://openweathermap.org/img/w/${data.weather[0].icon}.png`}\n\t\t\t\t/>\n\t\t\t))\n\t\t\t\n\t\t}\n\t\n\t\tlet city, temperature, humidity, clouds, iconUrl, icon;\n\t\tif (this.state.weatherData) {\n\t\t\tconsole.log(this.state.weatherData);\n\t\t\tconsole.log(this.state.weeklyWeatherData);\n\t\t\tif (this.state.weatherData.count > 0) {\n\t\t\t\tcity = <p>Grad: {this.state.weatherData.list[0].name}</p>;\n\t\t\t\ttemperature = <p>Temperatura: {this.state.weatherData.list[0].main.temp}°C</p>;\n\t\t\t\thumidity = <p>Vlaznost vazduha: {this.state.weatherData.list[0].main.humidity}%</p>;\n\t\t\t\tclouds = <p>Oblaci: {this.state.weatherData.list[0].weather[0].description}</p>;\n\t\t\t\ticonUrl = `http://openweathermap.org/img/w/${this.state.weatherData.list[0].weather[0].icon}.png`;\n\t\t\t\ticon = <img src={iconUrl} alt={'alt text'} />;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input type=\"text\" placeholder=\"grad\" onChange={this.handleChange} />\n\t\t\t\t<button onClick={this.getCurrentWeatherData}>Get Current Weather Data</button>\n\t\t\t\t<button onClick={this.getWeeklyWeatherData}>Get Weekly Weather Data</button>\n\t\t\t\t{city}\n\t\t\t\t{temperature}\n\t\t\t\t{humidity}\n\t\t\t\t{clouds}\n\t\t\t\t{icon}\n\t\t\t\t{dailyData}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}