{"ast":null,"code":"var _jsxFileName = \"/home/marko/Documents/var/www/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      value: null\n    };\n\n    this.getWeatherData = () => {\n      console.log('getting data bitch');\n      let url = \"https://api.openweathermap.org/data/2.5/find?q=\".concat(this.state.value, \"&units=metric&lang={hr}&appid=7c322888d234d1fc7dc225ad7e3e1e03\");\n      axios.get(url).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleChange = e => {\n      // e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      value: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    let city;\n    let temperature;\n    let humidity;\n    let clouds;\n\n    if (this.state.weatherData) {\n      console.log(this.state.weatherData.list[0]);\n      city = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"City: \", this.state.weatherData.list[0].name);\n      temperature = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Temperature: \", this.state.weatherData.list[0].main.temp, \"deg\");\n      humidity = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"humidity: \", this.state.weatherData.list[0].main.humidity, \"%\");\n      clouds = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Clouds: \", this.state.weatherData.list[0].weather[0].description);\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"London\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.getWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Get Weather Data\"), city, temperature, humidity, clouds);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Documents/var/www/weather-app/src/App.js"],"names":["React","Component","axios","App","constructor","props","state","API_key","weatherData","value","getWeatherData","console","log","url","get","then","res","data","setState","catch","e","handleChange","target","bind","render","city","temperature","humidity","clouds","list","name","main","temp","weather","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tstate = {\n\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\tweatherData: null,\n\t\tvalue: null\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\t\tweatherData: null,\n\t\t\tvalue: null,\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tgetWeatherData = () => {\n\t\tconsole.log('getting data bitch');\n\n\t\tlet url = `https://api.openweathermap.org/data/2.5/find?q=${this.state\n\t\t\t.value}&units=metric&lang={hr}&appid=7c322888d234d1fc7dc225ad7e3e1e03`;\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n\t\t\t\tthis.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\t// e.preventDefault();\n\t\tthis.setState({ value: e.target.value });\n\t};\n\n\trender() {\n\t\tlet city;\n\t\tlet temperature;\n\t\tlet humidity;\n\t\tlet clouds;\n\t\tif (this.state.weatherData) {\n\t\t\tconsole.log(this.state.weatherData.list[0]);\n\t\t\tcity = <p>City: {this.state.weatherData.list[0].name}</p>;\n\t\t\ttemperature = <p>Temperature: {this.state.weatherData.list[0].main.temp}deg</p>;\n\t\t\thumidity = <p>humidity: {this.state.weatherData.list[0].main.humidity}%</p>;\n\t\t\tclouds = <p>Clouds: {this.state.weatherData.list[0].weather[0].description}</p>;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"text\" placeholder=\"London\" onChange={this.handleChange} />\n\t\t\t\t\t\n\t\t\t\t</form>\n        <button onClick={this.getWeatherData}>Get Weather Data</button>\n\t\t\t\t{city}\n\t\t\t\t{temperature}\n\t\t\t\t{humidity}\n\t\t\t\t{clouds}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}