{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Day from './Day/Day';\nimport axios from 'axios';\nimport { timingSafeEqual } from 'crypto';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = () => {\n      this.getCurrentWeatherData();\n      this.getWeeklyWeatherData();\n    };\n\n    this.getCurrentWeatherData = () => {\n      let dailyUrl = \"https://api.openweathermap.org/data/2.5/find?q=\".concat(this.state.value, \"&units=metric&appid=\").concat(this.state.API_key);\n      axios.get(dailyUrl).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        this.setState({\n          weatherData: null\n        });\n        console.log(e);\n      });\n    };\n\n    this.getWeeklyWeatherData = () => {\n      let weeklyUrl = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(this.state.value, \"&units=metric&appid=\").concat(this.state.API_key);\n      axios.get(weeklyUrl).then(res => {\n        const weeklyWeatherData = res.data;\n        this.setState({\n          weeklyWeatherData: weeklyWeatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleChange = e => {\n      // e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      weeklyWeatherData: null,\n      value: null,\n      latitude: '',\n      longitude: ''\n    };\n    this.handleChange = this.handleChange.bind(this); // this.showPosition = this.showPosition.bind(this);\n\n    this.getMyLocation = this.getMyLocation.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMyLocation();\n  }\n\n  getMyLocation() {\n    const location = window.navigator && window.navigator.geolocation;\n\n    if (location) {\n      location.getCurrentPosition(position => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        this.setState({\n          latitude: 'err-latitude',\n          longitude: 'err-longitude'\n        });\n      });\n    }\n  } // componentWillMount = () => {\n  // \tthis.getGeoLocation();\n  // }\n  // getGeoLocation = () => {\n  // \tif(navigator.geolocation) {\n  // \t\tnavigator.geolocation.getCurrentPosition(this.showPosition);\n  // \t\t// this.showPosition();\n  // \t}\n  // \telse{\n  // \t\talert(\"Geolocation is not supported by this browser\")\n  // \t}\n  // }\n  // showPosition = (position) => {\n  // \tlet latitute = position.coords.latitude;\n  // \tlet longitude = position.coords.longitude;\n  // \tconsole.log(position.coords.latitude);\n  // }\n\n\n  render() {\n    let dailyData;\n\n    if (this.state.weeklyWeatherData) {\n      const fiveDayData = this.state.weeklyWeatherData.list.filter(d => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1]);\n      console.log(fiveDayData);\n      dailyData = fiveDayData.map((data, index) => React.createElement(Day, {\n        date: data.dt_txt.split(' ')[0],\n        key: index,\n        temperature: Math.trunc(data.main.temp),\n        iconUrl: data.weather[0].icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n\n    let city, temperature, humidity, clouds, iconUrl, icon;\n\n    if (this.state.weatherData) {\n      if (this.state.weatherData.count > 0) {\n        city = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.state.weatherData.list[0].name);\n        temperature = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, Math.trunc(this.state.weatherData.list[0].main.temp), \"\\xB0C\");\n        humidity = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, this.state.weatherData.list[0].main.humidity, \"%\");\n        clouds = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, this.state.weatherData.list[0].weather[0].description);\n        iconUrl = \"http://openweathermap.org/img/wn/\".concat(this.state.weatherData.list[0].weather[0].icon, \"@2x.png\");\n        icon = React.createElement(\"img\", {\n          src: iconUrl,\n          alt: 'alt text',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Ime grada\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, temperature), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, city), humidity, clouds, icon, React.createElement(\"div\", {\n      className: \"Daily-Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, dailyData));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Desktop/weather-app/src/App.js"],"names":["React","Component","Day","axios","timingSafeEqual","App","constructor","props","getWeatherData","getCurrentWeatherData","getWeeklyWeatherData","dailyUrl","state","value","API_key","get","then","res","weatherData","data","setState","catch","e","console","log","weeklyUrl","weeklyWeatherData","handleChange","target","latitude","longitude","bind","getMyLocation","componentDidMount","location","window","navigator","geolocation","getCurrentPosition","position","coords","error","render","dailyData","fiveDayData","list","filter","d","dt_txt","split","map","index","Math","trunc","main","temp","weather","icon","city","temperature","humidity","clouds","iconUrl","count","name","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAgBnBC,cAhBmB,GAgBF,MAAM;AACtB,WAAKC,qBAAL;AACA,WAAKC,oBAAL;AACA,KAnBkB;;AAAA,SAqBnBD,qBArBmB,GAqBK,MAAM;AAC7B,UAAIE,QAAQ,4DAAqD,KAAKC,KAAL,CAAWC,KAAhE,iCAA4F,KACtGD,KADsG,CAChGE,OADI,CAAZ;AAEAX,MAAAA,KAAK,CACHY,GADF,CACMJ,QADN,EAEEK,IAFF,CAEQC,GAAD,IAAS;AACd,cAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;AACA,aAAKC,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAEA;AAAf,SAAd;AACA,OALF,EAMEG,KANF,CAMSC,CAAD,IAAO;AACb,aAAKF,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAE;AAAf,SAAd;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,OATF;AAUA,KAlCkB;;AAAA,SAoCnBZ,oBApCmB,GAoCI,MAAM;AAC5B,UAAIe,SAAS,gEAAyD,KAAKb,KAAL,CACpEC,KADW,iCACiB,KAAKD,KAAL,CAAWE,OAD5B,CAAb;AAEAX,MAAAA,KAAK,CACHY,GADF,CACMU,SADN,EAEET,IAFF,CAEQC,GAAD,IAAS;AACd,cAAMS,iBAAiB,GAAGT,GAAG,CAACE,IAA9B;AACA,aAAKC,QAAL,CAAc;AAAEM,UAAAA,iBAAiB,EAAEA;AAArB,SAAd;AACA,OALF,EAMEL,KANF,CAMSC,CAAD,IAAO;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,OARF;AASA,KAhDkB;;AAAA,SAkDnBK,YAlDmB,GAkDHL,CAAD,IAAO;AACrB;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAES,CAAC,CAACM,MAAF,CAASf;AAAlB,OAAd;AACA,KArDkB;;AAElB,SAAKD,KAAL,GAAa;AACZE,MAAAA,OAAO,EAAE,kCADG;AAEZI,MAAAA,WAAW,EAAE,IAFD;AAGZQ,MAAAA,iBAAiB,EAAE,IAHP;AAIZb,MAAAA,KAAK,EAAE,IAJK;AAKZgB,MAAAA,QAAQ,EAAE,EALE;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AAQA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBI,IAAlB,CAAuB,IAAvB,CAApB,CAVkB,CAWlB;;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA;;AA0CCE,EAAAA,iBAAiB,GAAG;AACrB,SAAKD,aAAL;AACE;;AAEDA,EAAAA,aAAa,GAAG;AACjB,UAAME,QAAQ,GAAGC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACC,SAAP,CAAiBC,WAAtD;;AAEA,QAAIH,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACI,kBAAT,CAA6BC,QAAD,IAAc;AAC3C,aAAKnB,QAAL,CAAc;AACZS,UAAAA,QAAQ,EAAEU,QAAQ,CAACC,MAAT,CAAgBX,QADd;AAEZC,UAAAA,SAAS,EAAES,QAAQ,CAACC,MAAT,CAAgBV;AAFf,SAAd;AAIE,OALD,EAKIW,KAAD,IAAW;AACf,aAAKrB,QAAL,CAAc;AAAES,UAAAA,QAAQ,EAAE,cAAZ;AAA4BC,UAAAA,SAAS,EAAE;AAAvC,SAAd;AACE,OAPD;AAQD;AAEC,GA3EwB,CA6E3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGAY,EAAAA,MAAM,GAAG;AACR,QAAIC,SAAJ;;AACA,QAAI,KAAK/B,KAAL,CAAWc,iBAAf,EAAkC;AACjC,YAAMkB,WAAW,GAAG,KAAKhC,KAAL,CAAWc,iBAAX,CAA6BmB,IAA7B,CAAkCC,MAAlC,CAAyCC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,MAA2B,KAAKrC,KAAL,CAAWc,iBAAX,CAA6BmB,IAA7B,CAAkC,CAAlC,EAAqCG,MAArC,CAA4CC,KAA5C,CAAkD,GAAlD,EAAuD,CAAvD,CAAzE,CAApB;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYoB,WAAZ;AACAD,MAAAA,SAAS,GAAGC,WAAW,CAACM,GAAZ,CAAgB,CAAC/B,IAAD,EAAOgC,KAAP,KAC3B,oBAAC,GAAD;AACC,QAAA,IAAI,EAAEhC,IAAI,CAAC6B,MAAL,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CADP;AAEC,QAAA,GAAG,EAAEE,KAFN;AAGC,QAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWlC,IAAI,CAACmC,IAAL,CAAUC,IAArB,CAHd;AAIC,QAAA,OAAO,EAAIpC,IAAI,CAACqC,OAAL,CAAa,CAAb,EAAgBC,IAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CAAZ;AAQA;;AAED,QAAIC,IAAJ,EAAUC,WAAV,EAAuBC,QAAvB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkDL,IAAlD;;AACA,QAAI,KAAK7C,KAAL,CAAWM,WAAf,EAA4B;AAC3B,UAAI,KAAKN,KAAL,CAAWM,WAAX,CAAuB6C,KAAvB,GAA+B,CAAnC,EAAsC;AACrCL,QAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAK9C,KAAL,CAAWM,WAAX,CAAuB2B,IAAvB,CAA4B,CAA5B,EAA+BmB,IAAnC,CAAP;AACAL,QAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIP,IAAI,CAACC,KAAL,CAAW,KAAKzC,KAAL,CAAWM,WAAX,CAAuB2B,IAAvB,CAA4B,CAA5B,EAA+BS,IAA/B,CAAoCC,IAA/C,CAAJ,UAAd;AACAK,QAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKhD,KAAL,CAAWM,WAAX,CAAuB2B,IAAvB,CAA4B,CAA5B,EAA+BS,IAA/B,CAAoCM,QAAxC,MAAX;AACAC,QAAAA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKjD,KAAL,CAAWM,WAAX,CAAuB2B,IAAvB,CAA4B,CAA5B,EAA+BW,OAA/B,CAAuC,CAAvC,EAA0CS,WAA9C,CAAT;AACAH,QAAAA,OAAO,8CAAuC,KAAKlD,KAAL,CAAWM,WAAX,CAAuB2B,IAAvB,CAA4B,CAA5B,EAA+BW,OAA/B,CAAuC,CAAvC,EAA0CC,IAAjF,YAAP;AACAA,QAAAA,IAAI,GAAG;AAAK,UAAA,GAAG,EAAEK,OAAV;AAAmB,UAAA,GAAG,EAAE,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,WAA/B;AAA2C,MAAA,QAAQ,EAAE,KAAKnC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAQ,MAAA,OAAO,EAAE,KAAKnB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKmD,WAAL,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAL,CAJD,EAKEE,QALF,EAMEC,MANF,EAOEJ,IAPF,EAQC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEd,SADF,CARD,CADF;AAcA;;AAzI0B;;AA4I5B,eAAetC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nimport Day from './Day/Day';\n\nimport axios from 'axios';\nimport { timingSafeEqual } from 'crypto';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\t\tweatherData: null,\n\t\t\tweeklyWeatherData: null,\n\t\t\tvalue: null,\n\t\t\tlatitude: '',\n\t\t  longitude: '',\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\t// this.showPosition = this.showPosition.bind(this);\n\t\tthis.getMyLocation = this.getMyLocation.bind(this)\n\t}\n\n\n\tgetWeatherData = () => {\n\t\tthis.getCurrentWeatherData();\n\t\tthis.getWeeklyWeatherData();\n\t}\n\n\tgetCurrentWeatherData = () => {\n\t\tlet dailyUrl = `https://api.openweathermap.org/data/2.5/find?q=${this.state.value}&units=metric&appid=${this\n\t\t\t.state.API_key}`;\n\t\taxios\n\t\t\t.get(dailyUrl)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n\t\t\t\tthis.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tthis.setState({ weatherData: null });\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tgetWeeklyWeatherData = () => {\n\t\tlet weeklyUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state\n\t\t\t.value}&units=metric&appid=${this.state.API_key}`;\n\t\taxios\n\t\t\t.get(weeklyUrl)\n\t\t\t.then((res) => {\n\t\t\t\tconst weeklyWeatherData = res.data;\n\t\t\t\tthis.setState({ weeklyWeatherData: weeklyWeatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\t// e.preventDefault();\n\t\tthis.setState({ value: e.target.value });\n\t};\n\n\t  componentDidMount() {\n\t\tthis.getMyLocation()\n\t  }\n\t\n\t  getMyLocation() {\n\t\tconst location = window.navigator && window.navigator.geolocation\n\t\t\n\t\tif (location) {\n\t\t  location.getCurrentPosition((position) => {\n\t\t\tthis.setState({\n\t\t\t  latitude: position.coords.latitude,\n\t\t\t  longitude: position.coords.longitude,\n\t\t\t})\n\t\t  }, (error) => {\n\t\t\tthis.setState({ latitude: 'err-latitude', longitude: 'err-longitude' })\n\t\t  })\n\t\t}\n\t\n\t  }\n\n\t// componentWillMount = () => {\n\t// \tthis.getGeoLocation();\n\t// }\n\t// getGeoLocation = () => {\n\t// \tif(navigator.geolocation) {\n\t// \t\tnavigator.geolocation.getCurrentPosition(this.showPosition);\n\t// \t\t// this.showPosition();\n\t// \t}\n\t// \telse{\n\t// \t\talert(\"Geolocation is not supported by this browser\")\n\t// \t}\n\t// }\n\n\t// showPosition = (position) => {\n\t// \tlet latitute = position.coords.latitude;\n\t// \tlet longitude = position.coords.longitude;\n\t// \tconsole.log(position.coords.latitude);\n\t// }\n\n\n\trender() {\n\t\tlet dailyData;\n\t\tif (this.state.weeklyWeatherData) {\n\t\t\tconst fiveDayData = this.state.weeklyWeatherData.list.filter(d => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1])\n\t\t\tconsole.log(fiveDayData);\n\t\t\tdailyData = fiveDayData.map((data, index) =>(\n\t\t\t\t<Day \n\t\t\t\t\tdate={data.dt_txt.split(' ')[0]}\n\t\t\t\t\tkey={index}\n\t\t\t\t\ttemperature={Math.trunc(data.main.temp)}\n\t\t\t\t\ticonUrl = {data.weather[0].icon}\n\t\t\t\t/>\n\t\t\t))\n\t\t}\n\t\n\t\tlet city, temperature, humidity, clouds, iconUrl, icon;\n\t\tif (this.state.weatherData) {\n\t\t\tif (this.state.weatherData.count > 0) {\n\t\t\t\tcity = <p>{this.state.weatherData.list[0].name}</p>;\n\t\t\t\ttemperature = <p>{Math.trunc(this.state.weatherData.list[0].main.temp)}°C</p>;\n\t\t\t\thumidity = <p>{this.state.weatherData.list[0].main.humidity}%</p>;\n\t\t\t\tclouds = <p>{this.state.weatherData.list[0].weather[0].description}</p>;\n\t\t\t\ticonUrl = `http://openweathermap.org/img/wn/${this.state.weatherData.list[0].weather[0].icon}@2x.png`;\n\t\t\t\ticon = <img src={iconUrl} alt={'alt text'} />;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"Ime grada\" onChange={this.handleChange} />\n\t\t\t\t\t<button onClick={this.getWeatherData}>Search</button>\n\t\t\t\t\t<h1>{temperature}</h1>\n\t\t\t\t\t<h2>{city}</h2>\n\t\t\t\t\t{humidity}\n\t\t\t\t\t{clouds}\n\t\t\t\t\t{icon}\n\t\t\t\t\t<div className=\"Daily-Data\">\n\t\t\t\t\t\t{dailyData}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}