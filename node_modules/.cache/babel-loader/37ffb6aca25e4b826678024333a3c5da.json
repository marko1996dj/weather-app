{"ast":null,"code":"var _jsxFileName = \"/home/marko/Documents/var/www/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Day from './Day/Day';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = () => {\n      this.getCurrentWeatherData();\n      this.getWeeklyWeatherData();\n    };\n\n    this.getCurrentWeatherData = () => {\n      let dailyUrl = \"https://api.openweathermap.org/data/2.5/find?q=\".concat(this.state.value, \"&units=metric&appid=\").concat(this.state.API_key);\n      axios.get(dailyUrl).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        this.setState({\n          weatherData: null\n        });\n        console.log(e);\n      });\n    };\n\n    this.getWeeklyWeatherData = () => {\n      let weeklyUrl = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(this.state.value, \"&units=metric&appid=\").concat(this.state.API_key);\n      axios.get(weeklyUrl).then(res => {\n        const weeklyWeatherData = res.data;\n        this.setState({\n          weeklyWeatherData: weeklyWeatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleChange = e => {\n      // e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.getMyLocationWeather = () => {\n      const location = window.navigator && window.navigator.geolocation;\n\n      if (location) {\n        location.getCurrentPosition(position => {\n          let url = \"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(position.coords.latitude, \"&lon=\").concat(position.coords.longitude, \"&units=metric&appid=\").concat(this.state.API_key);\n          axios.get(url).then(res => {\n            const weatherData = res.data;\n            this.setState({\n              locationWeatherData: weatherData\n            });\n          }).catch(e => {\n            console.log(e);\n          });\n        }, error => {\n          this.setState({\n            latitude: 'err-latitude',\n            longitude: 'err-longitude'\n          });\n        });\n        location.getCurrentPosition(position => {\n          let url = \"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(position.coords.latitude, \"&lon=\").concat(position.coords.longitude, \"&units=metric&appid=\").concat(this.state.API_key);\n          axios.get(url).then(res => {\n            const weeklyWeatherData = res.data;\n            this.setState({\n              weeklyWeatherData: weeklyWeatherData\n            });\n          }).catch(e => {\n            console.log(e);\n          });\n        }, error => {\n          this.setState({\n            latitude: 'err-latitude',\n            longitude: 'err-longitude'\n          });\n        });\n      }\n    };\n\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      weeklyWeatherData: null,\n      locationWeatherData: null,\n      value: null,\n      latitude: '',\n      longitude: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getMyLocationWeather = this.getMyLocationWeather.bind(this);\n  }\n\n  render() {\n    let dailyData;\n\n    if (this.state.weeklyWeatherData) {\n      const fiveDayData = this.state.weeklyWeatherData.list.filter(d => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1]);\n      console.log(fiveDayData);\n      dailyData = fiveDayData.map((data, index) => React.createElement(Day, {\n        date: data.dt_txt.split(' ')[0],\n        key: index,\n        temperature: Math.trunc(data.main.temp),\n        iconUrl: data.weather[0].icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n\n    let city, temperature, humidity, clouds, iconUrl, icon;\n\n    if (this.state.locationWeatherData) {\n      city = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.locationWeatherData.name);\n      temperature = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, Math.trunc(this.state.locationWeatherData.main.temp), \"\\xB0C\");\n      humidity = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.locationWeatherData.main.humidity, \"%\");\n      clouds = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.locationWeatherData.weather[0].description);\n      icon = React.createElement(\"img\", {\n        src: \"../assets/svg/\".concat(this.state.locationWeatherData.weather[0].icon, \".svg\"),\n        alt: 'alt text',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.weatherData) {\n      if (this.state.weatherData.count > 0) {\n        city = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, this.state.weatherData.list[0].name);\n        temperature = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, Math.trunc(this.state.weatherData.list[0].main.temp), \"\\xB0C\");\n        humidity = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, this.state.weatherData.list[0].main.humidity, \"%\");\n        clouds = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, this.state.weatherData.list[0].weather[0].description);\n        iconUrl = \"http://openweathermap.org/img/wn/\".concat(this.state.weatherData.list[0].weather[0].icon, \"@2x.png\");\n        icon = React.createElement(\"img\", {\n          src: iconUrl,\n          alt: 'alt text',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, icon), React.createElement(\"div\", {\n      className: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, clouds), React.createElement(\"div\", {\n      className: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, city), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, temperature), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Ime grada\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"Right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, humidity)), React.createElement(\"div\", {\n      className: \"Daily-Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, dailyData));\n  }\n\n  componentWillMount() {\n    this.getMyLocationWeather();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Documents/var/www/weather-app/src/App.js"],"names":["React","Component","Day","axios","App","constructor","props","getWeatherData","getCurrentWeatherData","getWeeklyWeatherData","dailyUrl","state","value","API_key","get","then","res","weatherData","data","setState","catch","e","console","log","weeklyUrl","weeklyWeatherData","handleChange","target","getMyLocationWeather","location","window","navigator","geolocation","getCurrentPosition","position","url","coords","latitude","longitude","locationWeatherData","error","bind","render","dailyData","fiveDayData","list","filter","d","dt_txt","split","map","index","Math","trunc","main","temp","weather","icon","city","temperature","humidity","clouds","iconUrl","name","description","count","componentWillMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nimport Day from './Day/Day';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\t\tweatherData: null,\n\t\t\tweeklyWeatherData: null,\n\t\t\tlocationWeatherData: null,\n\t\t\tvalue: null,\n\t\t\tlatitude: '',\n\t\t\tlongitude: ''\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.getMyLocationWeather = this.getMyLocationWeather.bind(this);\n\t}\n\n\tgetWeatherData = () => {\n\t\tthis.getCurrentWeatherData();\n\t\tthis.getWeeklyWeatherData();\n\t};\n\n\tgetCurrentWeatherData = () => {\n\t\tlet dailyUrl = `https://api.openweathermap.org/data/2.5/find?q=${this.state.value}&units=metric&appid=${this\n\t\t\t.state.API_key}`;\n\t\taxios\n\t\t\t.get(dailyUrl)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n\t\t\t\tthis.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tthis.setState({ weatherData: null });\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tgetWeeklyWeatherData = () => {\n\t\tlet weeklyUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state\n\t\t\t.value}&units=metric&appid=${this.state.API_key}`;\n\t\taxios\n\t\t\t.get(weeklyUrl)\n\t\t\t.then((res) => {\n\t\t\t\tconst weeklyWeatherData = res.data;\n\t\t\t\tthis.setState({ weeklyWeatherData: weeklyWeatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\thandleChange = (e) => {\n\t\t// e.preventDefault();\n\t\tthis.setState({ value: e.target.value });\n\t};\n\n\tgetMyLocationWeather = () => {\n\t\tconst location = window.navigator && window.navigator.geolocation;\n\t\tif (location) {\n\t\t\tlocation.getCurrentPosition(\n\t\t\t\t(position) => {\n\t\t\t\t\tlet url = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords\n\t\t\t\t\t\t.latitude}&lon=${position.coords.longitude}&units=metric&appid=${this.state.API_key}`;\n\t\t\t\t\taxios\n\t\t\t\t\t\t.get(url)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tconst weatherData = res.data;\n\t\t\t\t\t\t\tthis.setState({ locationWeatherData: weatherData });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthis.setState({ latitude: 'err-latitude', longitude: 'err-longitude' });\n\t\t\t\t}\n\t\t\t);\n\t\t\tlocation.getCurrentPosition(\n\t\t\t\t(position) => {\n\t\t\t\t\tlet url = `https://api.openweathermap.org/data/2.5/forecast?lat=${position.coords\n\t\t\t\t\t\t.latitude}&lon=${position.coords.longitude}&units=metric&appid=${this.state.API_key}`;\n\t\t\t\t\taxios\n\t\t\t\t\t\t.get(url)\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tconst weeklyWeatherData = res.data;\n\t\t\t\t\t\t\tthis.setState({ weeklyWeatherData: weeklyWeatherData });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthis.setState({ latitude: 'err-latitude', longitude: 'err-longitude' });\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tlet dailyData;\n\t\tif (this.state.weeklyWeatherData) {\n\t\t\tconst fiveDayData = this.state.weeklyWeatherData.list.filter(\n\t\t\t\t(d) => d.dt_txt.split(' ')[1] === this.state.weeklyWeatherData.list[0].dt_txt.split(' ')[1]\n\t\t\t);\n\t\t\tconsole.log(fiveDayData);\n\t\t\tdailyData = fiveDayData.map((data, index) => (\n\t\t\t\t<Day\n\t\t\t\t\tdate={data.dt_txt.split(' ')[0]}\n\t\t\t\t\tkey={index}\n\t\t\t\t\ttemperature={Math.trunc(data.main.temp)}\n\t\t\t\t\ticonUrl={data.weather[0].icon}\n\t\t\t\t/>\n\t\t\t));\n\t\t}\n\t\tlet city, temperature, humidity, clouds, iconUrl, icon;\n\t\tif (this.state.locationWeatherData) {\n\t\t\tcity = <p>{this.state.locationWeatherData.name}</p>;\n\t\t\ttemperature = <p>{Math.trunc(this.state.locationWeatherData.main.temp)}°C</p>;\n\t\t\thumidity = <p>{this.state.locationWeatherData.main.humidity}%</p>;\n\t\t\tclouds = <p>{this.state.locationWeatherData.weather[0].description}</p>;\n\t\t\ticon = <img src={`../assets/svg/${this.state.locationWeatherData.weather[0].icon}.svg`} alt={'alt text'} />;\n\t\t}\n\n\t\tif (this.state.weatherData) {\n\t\t\tif (this.state.weatherData.count > 0) {\n\t\t\t\tcity = <p>{this.state.weatherData.list[0].name}</p>;\n\t\t\t\ttemperature = <p>{Math.trunc(this.state.weatherData.list[0].main.temp)}°C</p>;\n\t\t\t\thumidity = <p>{this.state.weatherData.list[0].main.humidity}%</p>;\n\t\t\t\tclouds = <p>{this.state.weatherData.list[0].weather[0].description}</p>;\n\t\t\t\ticonUrl = `http://openweathermap.org/img/wn/${this.state.weatherData.list[0].weather[0].icon}@2x.png`;\n\t\t\t\ticon = <img src={iconUrl} alt={'alt text'} />;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"Wrapper\">\n\t\t\t\t\t<div className=\"Left\">\n\t\t\t\t\t\t<div className=\"Icon\">{icon}</div>\n\t\t\t\t\t\t<div className=\"Description\">{clouds}</div>\n\t\t\t\t\t\t<div className=\"City\">{city}</div>\n\t\t\t\t\t\t<h1>{temperature}</h1>\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Ime grada\" onChange={this.handleChange} />\n\t\t\t\t\t\t<button onClick={this.getWeatherData}>Search</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Right\">{humidity}</div>\n\t\t\t\t</div>\n\n\t\t\t\t\n\n\t\t\t\t<div className=\"Daily-Data\">{dailyData}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.getMyLocationWeather();\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}