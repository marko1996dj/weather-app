{"ast":null,"code":"var _jsxFileName = \"/home/marko/Documents/var/www/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentWeatherData = () => {\n      let url = \"https://api.openweathermap.org/data/2.5/find?q=\".concat(this.state.value, \"&units=metric&lang=hr&appid=7c322888d234d1fc7dc225ad7e3e1e03\");\n      axios.get(url).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        this.setState({\n          weatherData: null\n        });\n        console.log(e);\n      });\n    };\n\n    this.getWeeklyWeatherData = () => {\n      let url = \"api.openweathermap.org/data/2.5/forecast/daily?q=\".concat(this.state.value, \"&units=metric&lang=hr&appid=7c322888d234d1fc7dc225ad7e3e1e03\");\n      axios.get(url).then(res => {\n        const weeklyWeatherData = res.data;\n        this.setState({\n          weeklyWeatherData: weeklyWeatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleChange = e => {\n      // e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      weeklyWeatherData: null,\n      value: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    let city, temperature, humidity, clouds, iconUrl, icon;\n\n    if (this.state.weatherData) {\n      console.log(this.state.weatherData);\n      console.log(this.state.weeklyWeatherData);\n\n      if (this.state.weatherData.count > 0) {\n        city = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Grad: \", this.state.weatherData.list[0].name);\n        temperature = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Temperatura: \", this.state.weatherData.list[0].main.temp, \"\\xB0C\");\n        humidity = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Vlaznost vazduha: \", this.state.weatherData.list[0].main.humidity, \"%\");\n        clouds = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Oblaci: \", this.state.weatherData.list[0].weather[0].description);\n        iconUrl = \"http://openweathermap.org/img/w/\".concat(this.state.weatherData.list[0].weather[0].icon, \".png\");\n        icon = React.createElement(\"img\", {\n          src: iconUrl,\n          alt: 'alt text',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"grad\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getCurrentWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Get Current Weather Data\"), React.createElement(\"button\", {\n      onClick: this.getWeeklyWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Get Weekly Weather Data\"), city, temperature, humidity, clouds, icon);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Documents/var/www/weather-app/src/App.js"],"names":["React","Component","axios","App","constructor","props","getCurrentWeatherData","url","state","value","get","then","res","weatherData","data","setState","catch","e","console","log","getWeeklyWeatherData","weeklyWeatherData","handleChange","target","API_key","bind","render","city","temperature","humidity","clouds","iconUrl","icon","count","list","name","main","temp","weather","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null,\n      weeklyWeatherData: null,\n\t\t\tvalue: null\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tgetCurrentWeatherData = () => {\n\t\tlet url = `https://api.openweathermap.org/data/2.5/find?q=${this.state\n\t\t\t.value}&units=metric&lang=hr&appid=7c322888d234d1fc7dc225ad7e3e1e03`;\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n        this.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n        this.setState({ weatherData: null})\n\t\t\t\tconsole.log(e);\n\t\t\t});\n  };\n  \n  getWeeklyWeatherData = () => {\n    let url = `api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.value}&units=metric&lang=hr&appid=7c322888d234d1fc7dc225ad7e3e1e03`\n    axios.get(url).then((res) => {\n      const weeklyWeatherData = res.data;\n      this.setState({ weeklyWeatherData: weeklyWeatherData})\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n\thandleChange = (e) => {\n\t\t// e.preventDefault();\n\t\tthis.setState({ value: e.target.value });\n\t};\n\n\trender() {\n\t\tlet city, temperature, humidity, clouds, iconUrl, icon;\n\t\tif (this.state.weatherData) {\n      console.log(this.state.weatherData);\n      console.log(this.state.weeklyWeatherData);\n      if( this.state.weatherData.count > 0){\n        city = <p>Grad: {this.state.weatherData.list[0].name}</p>;\n        temperature = <p>Temperatura: {this.state.weatherData.list[0].main.temp}Â°C</p>;\n        humidity = <p>Vlaznost vazduha: {this.state.weatherData.list[0].main.humidity}%</p>;\n        clouds = <p>Oblaci: {this.state.weatherData.list[0].weather[0].description}</p>;\n        iconUrl = `http://openweathermap.org/img/w/${this.state.weatherData.list[0].weather[0].icon}.png`\n        icon = <img src={iconUrl} alt={'alt text'}></img>\n      }\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input type=\"text\" placeholder=\"grad\" onChange={this.handleChange} />\n\t\t\t\t<button onClick={this.getCurrentWeatherData}>Get Current Weather Data</button>\n\t\t\t\t<button onClick={this.getWeeklyWeatherData}>Get Weekly Weather Data</button>\n\t\t\t\t{city}\n\t\t\t\t{temperature}\n\t\t\t\t{humidity}\n        {clouds}\n        {icon}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}