{"ast":null,"code":"var _jsxFileName = \"/home/marko/Documents/var/www/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      API_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n      weatherData: null\n    };\n\n    this.getWeatherData = () => {\n      console.log('getting data bitch');\n      let url = 'https://api.openweathermap.org/data/2.5/find?q=belgrade,rs&units=metric&appid=7c322888d234d1fc7dc225ad7e3e1e03';\n      axios.get(url).then(res => {\n        const weatherData = res.data;\n        this.setState({\n          weatherData: weatherData\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n  }\n\n  render() {\n    let city;\n    let temperature;\n\n    if (this.state.weatherData) {\n      console.log(this.state.weatherData.list[0]);\n      city = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"City: \", this.state.weatherData.list[0].name);\n      temperature = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Temperature: \", this.state.weatherData.list[0].main.temp, \"deg\");\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.getWeatherData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Get Weather Data\"), city, temperature);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/marko/Documents/var/www/weather-app/src/App.js"],"names":["React","Component","axios","App","state","API_key","weatherData","getWeatherData","console","log","url","get","then","res","data","setState","catch","e","render","city","temperature","list","name","main","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACPC,MAAAA,OAAO,EAAE,kCADF;AAEPC,MAAAA,WAAW,EAAE;AAFN,KADmB;;AAAA,SAM3BC,cAN2B,GAMV,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,UAAIC,GAAG,GACN,gHADD;AAGAR,MAAAA,KAAK,CACHS,GADF,CACMD,GADN,EAEEE,IAFF,CAEQC,GAAD,IAAS;AACd,cAAMP,WAAW,GAAGO,GAAG,CAACC,IAAxB;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA,WAAW,EAAEA;AAAf,SAAd;AACA,OALF,EAMEU,KANF,CAMSC,CAAD,IAAO;AACbT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACA,OARF;AASA,KArB0B;AAAA;;AAuB3BC,EAAAA,MAAM,GAAG;AACN,QAAIC,IAAJ;AACA,QAAIC,WAAJ;;AACA,QAAG,KAAKhB,KAAL,CAAWE,WAAd,EAA2B;AACzBE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,WAAX,CAAuBe,IAAvB,CAA4B,CAA5B,CAAZ;AACAF,MAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU,KAAKf,KAAL,CAAWE,WAAX,CAAuBe,IAAvB,CAA4B,CAA5B,EAA+BC,IAAzC,CAAP;AACAF,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,KAAKhB,KAAL,CAAWE,WAAX,CAAuBe,IAAvB,CAA4B,CAA5B,EAA+BE,IAA/B,CAAoCC,IAArD,QAAd;AACD;;AACH,WACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,OAAO,EAAE,KAAKjB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEMY,IAFN,EAGMC,WAHN,CADD;AAOA;;AAtC0B;;AAyC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tstate = {\n\t\tAPI_key: '7c322888d234d1fc7dc225ad7e3e1e03',\n\t\tweatherData: null\n\t};\n\n\tgetWeatherData = () => {\n\t\tconsole.log('getting data bitch');\n\n\t\tlet url =\n\t\t\t'https://api.openweathermap.org/data/2.5/find?q=belgrade,rs&units=metric&appid=7c322888d234d1fc7dc225ad7e3e1e03';\n\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((res) => {\n\t\t\t\tconst weatherData = res.data;\n\t\t\t\tthis.setState({ weatherData: weatherData });\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\trender() {\n    let city\n    let temperature\n    if(this.state.weatherData) {\n      console.log(this.state.weatherData.list[0])\n      city = <p>City: {this.state.weatherData.list[0].name}</p>\n      temperature = <p>Temperature: {this.state.weatherData.list[0].main.temp}deg</p>\n    }\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<button onClick={this.getWeatherData}>Get Weather Data</button>\n        {city}\n        {temperature}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}